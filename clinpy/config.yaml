
output:
  name: test.db
  type: sqlite
  # if not sqlite will need an .env file with host, port user, password
  create: true # otherwise add to existing database needs to be provided

#TODO update this with other metadadata
sample_meta: # this way the user can have arbitrary columns, user_annot will be added as well that will be json type
  file: sample_meta.tsv # always a tsv
  columns: #allowed types, str, int, float, date, bool, json but will not check fields same is true for variant impacts, pandas will check if
    # all the columns names match
    sample_id:
      type: int
      index: true
      pk: true
    tm_id:
      type: str
      index: false
    dx:
      type: str
      index: false
    tissue:
      type: str
      index: false
    sex:
      type: str
      index: false
    age:
      type: float
      index: false
    type_of_surgery:
      type: str
      index: false
    batch:
      type: str
      index: false
    platform:
      type: str
      index: false
    cohort:
      type: str
      index: true

# will try to support rna, ase, snp, sv, str, cnv for DNA and RNA will work on others later
# ase will need both dna and rna
data:
  modalities:
    rna:
      file: rna.csv # always a tsv
      columns: #these are the allowed values the order can change or can be missing but it needs to match
        # columns of the rna file
        - samplename  # this one is mandatory
        - gene_expression
        - isoform_expression
        - unfiltered_junctions
        #- filtered_junctions
        - rna_variants
        #- filtered_rna_variants
      vcf_config: vcf.yaml
      min_junction_reads: 10
    snps:
      file: varitants.vsv # always a tsv, has sample_id and vcf file path no header
      columns:
        - samplename
        - variants
        #- filtered_variants
      vcf_config: vcf.yaml
  # hopefully more to come